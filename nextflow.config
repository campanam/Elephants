manifest {

	name = 'Kauai Population Genomics'
	author = 'Michael G. Campana'
	homePage = 'https://github.com/campanam/kauai'
	description = 'Pipeline to analyze Kauai honeycreeper population genomics'
	mainScript = 'kauai.nf'
	version = '0.2.0'
	nextflowVersion = '>=20.10.0'

}

params {

	outdir = "$baseDir/kauai_results_v2" // Output directory
	refseq = "$baseDir/hofi_genome_genbank_v2_masked.fa" // House finch genome reference sequence
	mtDNA = "$baseDir/hofi_mt.fasta" // Mitochondrial reference sequence file
	mtDNA_ID = 'NC_025610.1' // Name of mtDNA sequence in reference sequence file
	samples = "$baseDir/kauai_libraries_v2.csv" // CSV detailing sequencing libraries and needed analyses
	reads = "$baseDir/RawData/" // Path to reads
	min_uniq_mapped = 10 // Minimum number of unique mapped reads to retain an alignment file
	aDNA_trimmed_bases = 2 // Number of bases to trim from 5' and 3' termini to account for deamination damage
	
	bin = "$baseDir/bin/" // Directory for binaries used in pipeline
	/* Versions in current pipeline:
	BWA 0.7.17-r1188
	SAMtools 1.13
	BCFtools 1.13
	CircularMapper 1.93.5
	GATK 4.2.3.0
	Picard 2.26.4
	AdapterRemoval 2.3.1
	DamageProfiler 1.1
	bamUtil 1.0.15
	BEDtools 2.30.0
	VCFtools 0.1.16
	vcf2aln 0.11.4
	GenMap 1.3.0 (with SeqAn 2.4.1) -- Note: the compiled binary says 1.2.0 
	filterGM 0.3.2 with denovolib 0.7.3 from RatesTools 0.2 */
	
	bwa_threads = 8 // Threads for BWA
	samtools_extra_threads = 7 // Extra threads for SAMtools
	java_options = "" // Execution options for java jar files (Java 1.8)
	java11_options = "" // Execution options for java jar files (Java 11 or higher)
	gm_tmpdir = '/tmp' // Scratch directory for GenMap indexing
	gm_threads = 8 // Number of GenMap threads
	gatk_tmpdir = '/pool/genomics/campanam/tmp' // Scratch directory for GATK
	
}

modules {

	// List of Modules required for each executable. Set to "" for null value
	modules.java = "" // Module for Java 1.8 for Picard/GATK
	modules.ruby = "" // Module for Ruby interpreter
	modules.java11 = "" // Module for Java 11 (or higher) for DamageProfiler

}

profiles {
	hydra {
	
		samtools_threads = params.samtools_extra_threads + 1 // Calculate number of CPUs for samtools
		// Calculate number of CPUs needed for BWA alignment steps
		if ( params.bwa_threads >= samtools_threads ) {
			bwa_aln_threads = params.bwa_threads
			} else { bwa_aln_threads = samtools_threads
		}
		// Modules for executables not included in bin folder
		modules.java = "java/1.8" // Module for Java 1.8 for Picard/GATK
		modules.ruby = "bio/ruby/2.6.3"
		modules.java11 = "java/17.0.1" // Module for Java 11 (or higher) for DamageProfiler
		modules.gcc = "gcc/7.3.0" // Module for GCC for bamUtil
	
		// Default clusterOptions for picard, vcftools and java commands
		params.java_options = '-d64 -server -XX:MaxHeapSize=7G' // Options for Java 1.8
		params.java11_options = '-server -XX:MaxHeapSize=7G' // Options for Java 11
		default_options = '-l mres=8G,h_data=8G,h_vmem=8G,himem -S /bin/bash' // Default options for computation steps
	
		executor {
	
			name = 'sge'
			exitReadTimeout = '10min'
	
		}
	
		process {
			maxForks = 1000 // Prevent job submission overflow
			errorStrategy = 'finish'
			maxRetries = 1
			queue = 'sThM.q'
			clusterOptions = default_options
			withName: identifyLowCoverageBAMs {
				// storeDir not available for stdout output, hence awkward reuse of storeDir directive below
				queue = 'sThC.q'
				clusterOptions = '-l mres=1G,h_data=1G,h_vmem=1G -S /bin/bash'
			}
			withName: trimAdapters { 
				queue = 'mThM.q'
				storeDir = 'chkpnt' // Prevent remaking completed files
			}
			withName: 'genMapIndex|mapfilternuVar' {
				queue = 'mThM.q'
				clusterOptions = "-l mres=16G,h_data=16G,h_vmem=16G,himem -S /bin/bash"
				storeDir = 'chkpnt' // Prevent remaking completed files
			}
			withName: genMapMap {
				queue = 'mThM.q'
				clusterOptions = "-l mres=10G,h_data=10G,h_vmem=10G,himem -pe mthread ${params.gm_threads} -S /bin/bash"
				module = [modules.ruby]
				storeDir = 'chkpnt' // Prevent remaking completed files
			}
			withName: 'leftAlignIndels|markDup|mergedLeftAlignIndels|mergedMarkDup' {
				clusterOptions = '-l mres=16G,h_data=16G,h_vmem=16G,himem -pe mthread 2 -S /bin/bash'
				module = [modules.java]
				storeDir = 'chkpnt' // Prevent remaking completed files
			}
			withName: 'jointcallVariants' {
				clusterOptions = '-l mres=16G,h_data=16G,h_vmem=16G,himem -S /bin/bash'
				queue = 'lThM.q'
				storeDir = 'chkpnt' // Prevent remaking completed files
			}
			withName: 'flagStats|fixMate|sortBAM|addReadGroups' { 
				clusterOptions = "-l mres=2G,h_data=2G,h_vmem=2G,himem -pe mthread ${samtools_threads} -S /bin/bash"
				storeDir = 'chkpnt' // Prevent remaking completed files
			}
			withName: buildRef { 
				clusterOptions = '-l mres=16G,h_data=16G,h_vmem=16G,himem -S /bin/bash'
				storeDir = 'chkpnt' // Prevent remaking completed files
			}
			withName: buildMitoRef {
				clusterOptions = '-l mres=1G,h_data=1G,h_vmem=1G -S /bin/bash'
				queue = 'sThC.q'
				storeDir = 'chkpnt' // Prevent remaking completed files
			}
			withName: 'alignMitoSeqs|alignSeqs' { 
				queue = 'mThM.q'
				clusterOptions = "-l mres=8G,h_data=8G,h_vmem=8G,himem -pe mthread ${bwa_aln_threads} -S /bin/bash"
			}
			withName: jointcallmtHaplotypes {
				module = [modules.ruby]
			}
			withName: 'alignSeqs|alignMitoSeqs|sortModern|mergeSampleBAM|mergedFlagStats|jointcallVariants|jointcallmtHaplotypes|filternuVar' {
				storeDir = 'chkpnt' // Prevent remaking completed files
			}
		}
	}
}
